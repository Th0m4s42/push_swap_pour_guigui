========================
	PUSH_SWAP
========================

#1 Create 2 satck called 'a' and 'b'
#2 Create a program with a sorting algorithm
#3 Operations authorised: swap, rotate, reverse rotate, push
#4 Output operations done

========================
	PARSING
========================

#1 Create a linked list
#2 Must be a doubly list
#3 Could be circular (no utility here)

ðŸ­¹>Declare pointers to two linked lists
	â””â”€â”€>Set both to NULL
ðŸ­¹>Handle input by split
ðŸ­¹>Handle input errors. (min 2 args + char overflow)
	â””â”€â”€>If input errors, return error
ðŸ­¹>Convert in int(long)
	â””â”€â”€>If overflow, return error
ðŸ­¹>Put args in stack a
ðŸ­¹>Go algo if not sorted

========================
	ALGO
========================

Implement command
if only 2 args just swap if needed
Sort with three arguments
6 posibilities:
1 2 3 already sorted
1 3 2 rra sa
2 1 3 sa
2 3 1 rra
3 1 2 ra
3 2 1 sa rra
Sort with more (5 and plus)
Turk Algorithm

push_swap
â”‚
â”œâ”€â”€ libft/
â”‚   â”‚
â”‚   â”œâ”€â”€ src_libft/
â”‚   â”‚   â””â”€â”€...
â”‚   â”‚
â”‚   â”œâ”€â”€ src_ft_printf/
â”‚   â”‚   â””â”€â”€...
â”‚   â”‚
â”‚   â”œâ”€â”€ src_get_next_line/
â”‚   â”‚   â””â”€â”€...
â”‚   â”‚
â”‚   â”œâ”€â”€ includes/
â”‚   â”‚   â”œâ”€â”€ libft.h
â”‚   â”‚   â”œâ”€â”€ get_next_line.h
â”‚   â”‚   â””â”€â”€ printh.h
â”‚   â”‚
â”‚   â””â”€â”€ Makefile
â”‚
â”œâ”€â”€ src/
â”‚   â”œâ”€â”€ main.c
â”‚   â”œâ”€â”€ utils.c
â”‚   â””â”€â”€ ...
â”‚
â”œâ”€â”€ includes/
â”‚   â””â”€â”€ push_swap.h
â”‚
â””â”€â”€ Makefile

make && valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes ./push_swap "1 3 3"
